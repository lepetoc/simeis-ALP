name: Create a release on push
on:
  workflow_dispatch:
  push:
    branches: [ "release/**" ]

jobs:
  check-build:
    strategy:
     matrix:
       version: ["1.75.0", "1.80.0", "1.85.0", "1.88.0"]
       os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: Build avec Rust ${{ matrix.version }} sur ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Rust ${{ matrix.version }}
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.version }}
        override: false
    
    - name: Build
      run: cargo build --release

    - name: Rename binary
      id: rename
      run: |
        BRANCH_NAME=${{github.ref_name}}
        VERSION=${BRANCH_NAME//release\//v}
        FILE_NAME=simeis-${{matrix.os}}-${VERSION}
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "file_name=${FILE_NAME}" >> $GITHUB_OUTPUT
        mv ./target/release/simeis-server ./target/release/${FILE_NAME}
              
    - name: Release
      if: ${{ matrix.version == '1.85.0' }}
      uses: mini-bomba/create-github-release@v1.1.3
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.rename.outputs.version }}
          name: ${{ steps.rename.outputs.version }}
          body: |
            This automatic prerelease is built from commit ${{ env.GIT_HASH }} and was triggered by @${{ github.actor }}
            [Github Actions workflow run that built this prerelease](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Commit message:
            ${{ env.GIT_MESSAGE }}

            
          files: |
            ./target/release/${{ steps.rename.outputs.file_name }}

  debian-compiler:
    needs: check-build
    runs-on: ubuntu-latest
    name: Debian compiler
    steps:
      - uses: actions/checkout@v4

      - name: Build release
        run: cargo build --release
        
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Prepare Debian package
        run: |
          cd ./target/release

          mkdir -p ./simeis/usr/bin

          cp simeis-server ./simeis/usr/bin

          mkdir -p simeis/DEBIAN

          cp ../../simeis.1 ./simeis/simeis.1
          cp ../../simeis.service ./simeis/simeis.service

          cat <<'EOF' > ./simeis/DEBIAN/control
          Package: simeis
          Version: 1.0
          Section: base
          Priority: optional
          Architecture: all
          Depends: systemd
          Maintainer: Lucas sans chaise <LaChaise.com>
          Description: Simeis est un jeu par API (inspiré de SpaceTraders), dont le but est de faire fructifier votre empire économique dans toute la galaxie.
            Dans ce manuel, vous trouverez les mécaniques de base du jeu, c’est à vous de porter ces
            mécaniques de bases vers l’excellence intergalactique !
          EOF

          cat <<'EOF' > ./simeis/DEBIAN/postinst
          useradd --system --no-create-home --shell /usr/sbin/nologin simeis

          install -Dm644 simeis.1 /usr/share/man/man1/simeis.1
          gzip -f /usr/share/man/man1/simeis.1

          install -m 644 simeis.service /etc/systemd/system/simeis.service

          systemctl daemon-reexec
          systemctl daemon-reload
          systemctl enable simeis.service
          systemctl start simeis.service
          EOF

          chmod 755 ./simeis/DEBIAN/postinst

          dpkg-deb --build simeis

      - name: Get version
        id: get_version
        run: |
          BRANCH_NAME=${{github.ref_name}}
          VERSION=${BRANCH_NAME//release\//v}
          echo ${VERSION}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          
      - name: Generate Docker image
        run: |
          docker build -f .github/Dockerfile -t simeis:latest .
          docker save simeis:latest | gzip > simeis-docker-${{ steps.get_version.outputs.version }}.tar.gz

      - name: Upload Debian package as release asset
        uses: mini-bomba/create-github-release@v1.1.3
        with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ steps.get_version.outputs.version }}
            name: ${{ steps.get_version.outputs.version }}
            body: |
              This automatic prerelease is built from commit ${{ env.GIT_HASH }} and was triggered by @${{ github.actor }}
              [Github Actions workflow run that built this prerelease](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
  
              Commit message:
              ${{ env.GIT_MESSAGE }}
            
            files: |
              ./target/release/simeis.deb
              simeis-docker-${{ steps.get_version.outputs.version }}.tar.gz
              
            clear_attachments: false