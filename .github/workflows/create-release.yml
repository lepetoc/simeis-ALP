name: Create a release on push
on:
  workflow_dispatch:
  push:
    branches: [ "release/**" ]

jobs:
  check-build:
    strategy:
     matrix:
       version: ["1.75.0", "1.80.0", "1.85.0", "1.88.0"]
       os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    name: Build avec Rust ${{ matrix.version }} sur ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Rust ${{ matrix.version }}
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: ${{ matrix.version }}
        override: false
    
    - name: Build
      run: cargo build --release

    - name: Rename binary
      id: rename
      run: |
        BRANCH_NAME=${{github.ref_name}}
        VERSION=${BRANCH_NAME//release\//v}
        FILE_NAME=simeis-${{matrix.os}}-${VERSION}
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "file_name=${FILE_NAME}" >> $GITHUB_OUTPUT
        mv ./target/release/simeis-server ./target/release/${FILE_NAME}

    - name: Generate changelog
      id: changelog
      run: |
        git fetch --tags
        LAST_TAG=$(git describe --tags --abbrev=0 "${VERSION}^" 2>/dev/null || echo "")
        
        echo "## What's Changed in Release ${VERSION}" > changelog.md
        echo "" >> changelog.md
        
        if [ -z "$LAST_TAG" ]; then
          git log --oneline --no-merges | head -20 | while read line; do
          echo "- $line" >> changelog.md
          done
        fi
        
        {
          echo "changelog<<EOF"
          cat changelog.md
          echo "EOF"
        } >> $GITHUB_OUTPUT

    - name: Release
      if: ${{ matrix.version == '1.85.0' }}
      uses: mini-bomba/create-github-release@v1.1.3
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.rename.outputs.version }}
          name: ${{ steps.rename.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
            ---
            This automatic prerelease is built from commit ${{ env.GIT_HASH }} and was triggered by @${{ github.actor }}
            [Github Actions workflow run that built this prerelease](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Commit message:
            ${{ env.GIT_MESSAGE }}
          files: |
            ./target/release/${{ steps.rename.outputs.file_name }}
